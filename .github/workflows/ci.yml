name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  resolve-modules:
    name: Resolve Modules
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - id: set-matrix
        run: ./.github/workflows/scripts/resolve-modules.sh

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [resolve-modules]
    strategy:
      matrix: ${{ fromJson(needs.resolve-modules.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.46
          working-directory: ${{ matrix.workdir }}

  tidy:
    name: Go Tidy
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Tidy
        run: make go-tidy

      - name: Check Git Status
        run: |
          GIT_STATUS=$(git status --porcelain)
          if [[ $GIT_STATUS ]]; then
            echo $GIT_STATUS
            echo "Git status is not clean, aborting"            
            exit 1
          else
            echo "No changes after tidy, continuing"
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
  
    services:
      postgres:
        image: postgres:14.4-alpine
        env:
          POSTGRES_USER: go-tg
          POSTGRES_PASSWORD: go-tg
          POSTGRES_DB: go-tg
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql:8.0.30
        env:
          MYSQL_ROOT_PASSWORD: go-tg
        options: 
          --health-cmd "mysqladmin ping --password=go-tg --host localhost --user root"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
      
      redis-v7:
        image: redis:7-alpine

        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 63797:6379

      redis-v6:
        image: redis:7-alpine

        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 63796:6379

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Go Work
        run: |
          make workspace
          
      - name: Test
        env: 
          POSTGRES_DSN: postgres://go-tg:go-tg@localhost:5432/go-tg?sslmode=disable
          MYSQL_DSN: root:go-tg@tcp(localhost:3306)/mysql
          REDIS_V7_DSN: redis://localhost:63797
          REDIS_V6_DSN: redis://localhost:63796

        run: make tests

      - name: Upload coverage
        uses: codecov/codecov-action@v3